digraph G {
    bgcolor="transparent";
    subgraph cluster0 {
    label = <<B>URL: String</B>>;
        Constructed_URL [ label="Constructed" ];
        encodedURL_URL [ label="encodedURL" ];
    }
    subgraph cluster1 {
    label = <<B>Request: Request</B>>;
        Constructed_Request [ label="Constructed" ];
    }
    subgraph cluster2 {
    label = <<B>Client: OkHttpClient</B>>;
        Init_Client [ label="Init" ];
        Constructed_Client [ label="Constructed" ];
        Final_Client [ label="Final" ];
        virtual0 [ shape = point ];
    }
    subgraph cluster3 {
    label = <<B>Response: Response</B>>;
        Constructed_Response [ label="Constructed" ];
        virtual1 [ shape = point ];
        virtual2 [ shape = point ];
    }
    subgraph cluster4 {
    label = <<B>Body: String</B>>;
        Constructed_Body [ label="Constructed" ];
    }
    subgraph cluster5 {
    label = <<B>InputStream: InputStream</B>>;
        Constructed_InputStream [ label="Constructed" ];
    }
    subgraph cluster6 {
    label = <<B>ContentLength: long</B>>;
        Constructed_ContentLength [ label="Constructed" ];
    }
    subgraph cluster7 {
    label = <<B>Entity: ResponseBody</B>>;
        Constructed_Entity [ label="Constructed" ];
        virtual3 [ shape = point ];
        virtual4 [ shape = point ];
        virtual5 [ shape = point ];
    }
    subgraph cluster8 {
    label = <<B>Builder: Request.Builder</B>>;
        Init_Builder [ label="Init" ];
        Constructed_Builder [ label="Constructed" ];
        hasURL_Builder [ label="hasURL" ];
        virtual6 [ shape = point ];
    }
    subgraph cluster9 {
    label = <<B>Call: Call</B>>;
        Constructed_Call [ label="Constructed" ];
        virtual7 [ shape = point ];
    }
    subgraph cluster10 {
    label = <<B>StatusCode: int</B>>;
        Constructed_StatusCode [ label="Constructed" ];
    }
    subgraph cluster11 {
    label = <<B>RequestBody: RequestBody</B>>;
        Init_RequestBody [ label="Init" ];
        Constructed_RequestBody [ label="Constructed" ];
    }
    subgraph cluster12 {
    label = <<B>ContentType: String</B>>;
        Init_ContentType [ label="Init" ];
        Constructed_ContentType [ label="Constructed" ];
    }
    subgraph cluster13 {
    label = <<B>Payload: String</B>>;
        Constructed_Payload [ label="Constructed" ];
    }
    subgraph cluster14 {
    label = <<B>MediaType: MediaType</B>>;
        Init_MediaType [ label="Init" ];
        Constructed_MediaType [ label="Constructed" ];
    }
    subgraph cluster15 {
    label = <<B>FormBodyBuilder: FormBody.Builder</B>>;
        Init_FormBodyBuilder [ label="Init" ];
        Constructed_FormBodyBuilder [ label="Constructed" ];
        FormMade_FormBodyBuilder [ label="FormMade" ];
        virtual8 [ shape = point ];
    }
    subgraph cluster16 {
    label = <<B>RequestParamName: String</B>>;
        Constructed_RequestParamName [ label="Constructed" ];
    }
    subgraph cluster17 {
    label = <<B>RequestParamValue: String</B>>;
        Constructed_RequestParamValue [ label="Constructed" ];
    }
        Constructed_URL -> encodedURL_URL [ label="Auto", style = "solid"  ];
        encodedURL_URL -> hasURL_Builder [ label="Usage in url(URL: String)", style = "dashed"  ];
        Constructed_Request -> Constructed_Client [ label="Usage in newCall(Request: Request)", style = "dashed"  ];
        Init_Client -> Constructed_Client [ label="new Client: OkHttpClient()", style = "bold"  ];
        Constructed_Client -> virtual0 [ style = "bold" label="newCall(Request: Request)"  ];
        virtual0 -> Constructed_Client [ style = "bold"  ];
        virtual0 -> Constructed_Call [ label="return Call()"  ];
        Constructed_Client -> Final_Client [ label="Auto", style = "solid"  ];
        Constructed_Response -> virtual1 [ style = "bold" label="body()"  ];
        virtual1 -> Constructed_Response [ style = "bold"  ];
        virtual1 -> Constructed_Entity [ label="return ResponseBody()"  ];
        Constructed_Response -> virtual2 [ style = "bold" label="code()"  ];
        virtual2 -> Constructed_Response [ style = "bold"  ];
        virtual2 -> Constructed_StatusCode [ label="return int()"  ];
        Constructed_Entity -> virtual3 [ style = "bold" label="string()"  ];
        virtual3 -> Constructed_Entity [ style = "bold"  ];
        virtual3 -> Constructed_Body [ label="return String()"  ];
        Constructed_Entity -> virtual4 [ style = "bold" label="byteStream()"  ];
        virtual4 -> Constructed_Entity [ style = "bold"  ];
        virtual4 -> Constructed_InputStream [ label="return InputStream()"  ];
        Constructed_Entity -> virtual5 [ style = "bold" label="contentLength()"  ];
        virtual5 -> Constructed_Entity [ style = "bold"  ];
        virtual5 -> Constructed_ContentLength [ label="return long()"  ];
        Init_Builder -> Constructed_Builder [ label="new Builder: Request.Builder()", style = "bold"  ];
        Constructed_Builder -> hasURL_Builder [ label="url(URL: String)", style = "bold"  ];
        hasURL_Builder -> hasURL_Builder [ label="post(RequestBody: RequestBody)", style = "bold"  ];
        hasURL_Builder -> hasURL_Builder [ label="header(headerName, headerValue)", style = "bold"  ];
        hasURL_Builder -> virtual6 [ style = "bold" label="build()"  ];
        virtual6 -> hasURL_Builder [ style = "bold"  ];
        virtual6 -> Constructed_Request [ label="return Request()"  ];
        Constructed_Call -> virtual7 [ style = "bold" label="execute()"  ];
        virtual7 -> Constructed_Call [ style = "bold"  ];
        virtual7 -> Constructed_Response [ label="return Response()"  ];
        Init_RequestBody -> Constructed_RequestBody [ label="create(MediaType: MediaType, Payload: String)", style = "bold"  ];
        Constructed_RequestBody -> hasURL_Builder [ label="Usage in post(RequestBody: RequestBody)", style = "dashed"  ];
        Init_ContentType -> Constructed_ContentType [ label="Template", style = "bold"  ];
        Constructed_ContentType -> Constructed_MediaType [ label="Usage in parse(ContentType: String)", style = "dashed"  ];
        Constructed_Payload -> Constructed_RequestBody [ label="Usage in create(MediaType: MediaType, Payload: String)", style = "dashed"  ];
        Init_MediaType -> Constructed_MediaType [ label="parse(ContentType: String)", style = "bold"  ];
        Constructed_MediaType -> Constructed_RequestBody [ label="Usage in create(MediaType: MediaType, Payload: String)", style = "dashed"  ];
        Init_FormBodyBuilder -> Constructed_FormBodyBuilder [ label="new FormBodyBuilder: FormBody.Builder()", style = "bold"  ];
        Constructed_FormBodyBuilder -> FormMade_FormBodyBuilder [ label="add(RequestParamName: String, RequestParamValue: String)", style = "bold"  ];
        FormMade_FormBodyBuilder -> virtual8 [ style = "bold" label="build()"  ];
        virtual8 -> FormMade_FormBodyBuilder [ style = "bold"  ];
        virtual8 -> Constructed_RequestBody [ label="return RequestBody()"  ];
        Constructed_RequestParamName -> FormMade_FormBodyBuilder [ label="Usage in add(RequestParamName: String, RequestParamValue: String)", style = "dashed"  ];
        Constructed_RequestParamValue -> FormMade_FormBodyBuilder [ label="Usage in add(RequestParamName: String, RequestParamValue: String)", style = "dashed"  ];
}