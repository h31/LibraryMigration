digraph G {
    bgcolor="transparent";
    subgraph cluster0 {
    label = <<B>URL: String</B>>;
        Constructed_URL [ label="Constructed" ];
        encodedURL_URL [ label="encodedURL" ];
    }
    subgraph cluster1 {
    label = <<B>GetRequest: HttpGet</B>>;
        Init_GetRequest [ label="Init" ];
        Constructed_GetRequest [ label="Constructed" ];
    }
    subgraph cluster2 {
    label = <<B>Client: CloseableHttpClient</B>>;
        Constructed_Client [ label="Constructed" ];
        Final_Client [ label="Final" ];
        virtual0 [ shape = point ];
        virtual1 [ shape = point ];
    }
    subgraph cluster3 {
    label = <<B>Response: CloseableHttpResponse</B>>;
        Constructed_Response [ label="Constructed" ];
        virtual2 [ shape = point ];
        virtual3 [ shape = point ];
    }
    subgraph cluster4 {
    label = <<B>Body: String</B>>;
        Constructed_Body [ label="Constructed" ];
    }
    subgraph cluster5 {
    label = <<B>HttpClientFactory: HttpClients</B>>;
        Init_HttpClientFactory [ label="Init" ];
        virtual4 [ shape = point ];
    }
    subgraph cluster6 {
    label = <<B>InputStream: InputStream</B>>;
        Constructed_InputStream [ label="Constructed" ];
    }
    subgraph cluster7 {
    label = <<B>ContentLength: long</B>>;
        Constructed_ContentLength [ label="Constructed" ];
    }
    subgraph cluster8 {
    label = <<B>Entity: HttpEntity</B>>;
        Constructed_Entity [ label="Constructed" ];
        virtual5 [ shape = point ];
        virtual6 [ shape = point ];
    }
    subgraph cluster9 {
    label = <<B>EntityUtils: EntityUtils</B>>;
        Init_EntityUtils [ label="Init" ];
        virtual7 [ shape = point ];
    }
    subgraph cluster10 {
    label = <<B>StatusCode: int</B>>;
        Constructed_StatusCode [ label="Constructed" ];
    }
    subgraph cluster11 {
    label = <<B>ByteArrayEntity: ByteArrayEntity</B>>;
        Init_ByteArrayEntity [ label="Init" ];
        Constructed_ByteArrayEntity [ label="Constructed" ];
    }
    subgraph cluster12 {
    label = <<B>Payload: String</B>>;
        Init_Payload [ label="Init" ];
        Constructed_Payload [ label="Constructed" ];
    }
    subgraph cluster13 {
    label = <<B>PostRequest: HttpPost</B>>;
        Init_PostRequest [ label="Init" ];
        Constructed_PostRequest [ label="Constructed" ];
    }
    subgraph cluster14 {
    label = <<B>RequestParamName: String</B>>;
        Constructed_RequestParamName [ label="Constructed" ];
    }
    subgraph cluster15 {
    label = <<B>RequestParamValue: String</B>>;
        Constructed_RequestParamValue [ label="Constructed" ];
    }
        Constructed_URL -> encodedURL_URL [ label="Template", style = "bold"  ];
        encodedURL_URL -> Constructed_GetRequest [ label="Usage in new GetRequest: HttpGet(URL: String)", style = "dashed"  ];
        encodedURL_URL -> Constructed_PostRequest [ label="Usage in new PostRequest: HttpPost(URL: String)", style = "dashed"  ];
        Init_GetRequest -> Constructed_GetRequest [ label="new GetRequest: HttpGet(URL: String)", style = "bold"  ];
        Constructed_GetRequest -> Constructed_GetRequest [ label="addHeader(headerName, headerValue)", style = "bold"  ];
        Constructed_GetRequest -> Constructed_Client [ label="Usage in execute(GetRequest: HttpGet)", style = "dashed"  ];
        Constructed_Client -> virtual0 [ style = "bold" label="execute(GetRequest: HttpGet)"  ];
        virtual0 -> Constructed_Client [ style = "bold"  ];
        virtual0 -> Constructed_Response [ label="return CloseableHttpResponse()"  ];
        Constructed_Client -> virtual1 [ style = "bold" label="execute(PostRequest: HttpPost)"  ];
        virtual1 -> Constructed_Client [ style = "bold"  ];
        virtual1 -> Constructed_Response [ label="return CloseableHttpResponse()"  ];
        Constructed_Client -> Final_Client [ label="close()", style = "bold"  ];
        Constructed_Response -> virtual2 [ style = "bold" label="getEntity()"  ];
        virtual2 -> Constructed_Response [ style = "bold"  ];
        virtual2 -> Constructed_Entity [ label="return HttpEntity()"  ];
        Constructed_Response -> virtual3 [ style = "bold" label="Template"  ];
        virtual3 -> Constructed_Response [ style = "bold"  ];
        virtual3 -> Constructed_StatusCode [ label="return int()"  ];
        Init_HttpClientFactory -> virtual4 [ style = "bold" label="createDefault()"  ];
        virtual4 -> Init_HttpClientFactory [ style = "bold"  ];
        virtual4 -> Constructed_Client [ label="return CloseableHttpClient()"  ];
        Constructed_Entity -> Init_EntityUtils [ label="Usage in toString(Entity: HttpEntity)", style = "dashed"  ];
        Constructed_Entity -> virtual5 [ style = "bold" label="getContent()"  ];
        virtual5 -> Constructed_Entity [ style = "bold"  ];
        virtual5 -> Constructed_InputStream [ label="return InputStream()"  ];
        Constructed_Entity -> virtual6 [ style = "bold" label="getContentLength()"  ];
        virtual6 -> Constructed_Entity [ style = "bold"  ];
        virtual6 -> Constructed_ContentLength [ label="return long()"  ];
        Init_EntityUtils -> virtual7 [ style = "bold" label="toString(Entity: HttpEntity)"  ];
        virtual7 -> Init_EntityUtils [ style = "bold"  ];
        virtual7 -> Constructed_Body [ label="return String()"  ];
        Init_ByteArrayEntity -> Constructed_ByteArrayEntity [ label="new ByteArrayEntity: ByteArrayEntity(Payload: String)", style = "bold"  ];
        Constructed_ByteArrayEntity -> Constructed_PostRequest [ label="Usage in setEntity(ByteArrayEntity: ByteArrayEntity)", style = "dashed"  ];
        Init_Payload -> Constructed_Payload [ label="Template", style = "bold"  ];
        Constructed_Payload -> Constructed_ByteArrayEntity [ label="Usage in new ByteArrayEntity: ByteArrayEntity(Payload: String)", style = "dashed"  ];
        Init_PostRequest -> Constructed_PostRequest [ label="new PostRequest: HttpPost(URL: String)", style = "bold"  ];
        Constructed_PostRequest -> Constructed_PostRequest [ label="addHeader(headerName, headerValue)", style = "bold"  ];
        Constructed_PostRequest -> Constructed_Client [ label="Usage in execute(PostRequest: HttpPost)", style = "dashed"  ];
        Constructed_PostRequest -> Constructed_PostRequest [ label="setEntity(ByteArrayEntity: ByteArrayEntity)", style = "bold"  ];
        Constructed_RequestParamName -> Constructed_Payload [ label="Usage in Template", style = "dashed"  ];
        Constructed_RequestParamValue -> Constructed_Payload [ label="Usage in Template", style = "dashed"  ];
}